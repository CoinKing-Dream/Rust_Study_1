use std::io;

macro_rules! parse_input {
    ($x:expr, $t:ident) => ($x.trim().parse::<$t>().unwrap())
}

fn main() {
    let mut input_line = String::new();
    io::stdin().read_line(&mut input_line).unwrap();
    let n = parse_input!(input_line, i32);
    let mut ans = Vec::new();
    for i in 0..n {
        let mut input_line = String::new();
        io::stdin().read_line(&mut input_line).unwrap();
        let line = input_line.trim().to_string();
        let mut flag = true;
        let mut res = String::new();
        for c in line.chars() {
            if c == ' ' || c == '-' {flag = true;}
            if flag && c.is_ascii_alphabetic() {
                flag = false;
                res.push_str(&c.to_string());
            }
        }
        ans.push(res);
    }
    for i in 0..n as usize {
        println!("{}", ans[i]);
    }
}
